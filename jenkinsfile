def dockerImage() {
    echo(message: 'building the docker image...')
    withCredentials([usernamePassword(credentialsId: 'ci-docker', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
        sh 'docker build -t dimenssion/build:smile .'
        sh "docker login -u ${USERNAME} -p ${PASSWORD}"
        sh 'docker pull dimenssion/build:smile'
    }
}


properties([disableConcurrentBuilds(), pipelineTriggers([githubPush()])])

pipeline {

    agent any

    environment {
        registry = 'dimenssion/build'
        registryCredential = 'ci-docker'
        dockerTag = ':lts'
        credentialsId = 'ci-jenkins'
    }

    triggers { pollSCM('* * * * *') }
        options {
            buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
            timestamps()
        }

    stages {
        /* checkout repo */
        stage('Checkout SCM') {
            steps {
                checkout([
                 $class: 'GitSCM',
                 branches: [[name: 'master']],
                 userRemoteConfigs: [[
                    url: 'git@github.com:dimension-hub/docker-lamp.git',
                    credentialsId: credentialsId,
                 ]]
                ])
            }
        }
        stage('Remove Unused docker image') {
            steps {
                /* sh "docker rmi $registry:$BUILD_NUMBER" */
                sh 'docker system prune -af'
      }
    }
    }
    /* Cleanup workspace */
    post {
        always {
                dockerImage()
            }
    }

}
